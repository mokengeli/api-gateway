session:
  cache:
    ttl-seconds: 120
authentication:
  service-id: auth-service   # nom du micro-service dans Eureka
server:
  port: 8080  # Le port de la Gateway
security:
  cors:
    allowed-origins: http://localhost:3000, http://localhost:3001, https://hideously-smart-llama.ngrok-free.app
  jwt:
    secret: 9a4f2c_8d3b7a1e6f#45c8a0b3f268b1d4e6-f3c8a9d2b5f8e3a9c8-b5f6v8a3d9A@
    cookie:
      access-token: "accessToken"
spring:
  application:
    name: api-gateway
  jpa:
    properties:
      hibernate:
        jdbc:
          time_zone: GMT+01:00
  jackson:
    time-zone: GMT+01:00
  cloud:
    gateway:
      routes:
        - id: inventory-service
          uri: lb://inventory-service  # Utilisation de Load Balancer avec Eureka
          predicates:
            - Path=/api/inventory/**
        - id: user-service
          uri: lb://user-service  # Utilisation de Load Balancer avec Eureka
          predicates:
            - Path=/api/user/**
        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=/api/auth/**
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/api/order/**

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/  # URL du serveur Eureka
    fetch-registry: true
    register-with-eureka: true
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
gateway:
  public-paths: public/**, /api/auth/login

