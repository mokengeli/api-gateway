session:
  cache:
    ttl-seconds: ${SESSION_CACHE_TTL:120}

authentication:
  service-id: authentication-service

server:
  port: ${SERVER_PORT}
  forward-headers-strategy: framework
  netty:
    # Timeout plus long pour WebSocket
    idle-timeout: PT60S

security:
  cors:
    allowed-origins: ${ALLOWED_ORIGINS}
    mobile-patterns: ${MOBILE_PATTERNS}
  jwt:
    secret: ${JWT_SECRET}
    cookie:
      access-token: "accessToken"

spring:
  application:
    name: api-gateway
  jpa:
    properties:
      hibernate:
        jdbc:
          time_zone: ${TIME_ZONE:GMT+01:00}
  jackson:
    time-zone: ${TIME_ZONE:GMT+01:00}
  cloud:
    gateway:
      # Configuration globale
      globalcors:
        # Désactivé car géré par CorsGlobalConfiguration
        enabled: false
      forwarded:
        enabled: true
      # Routes - ORDRE IMPORTANT: WebSocket AVANT les routes standard
      routes:
        # Route WebSocket pour Order Service - DOIT ÊTRE EN PREMIER
        - id: order-service-websocket
          uri: ${ORDER_SERVICE_WS_URL:lb:ws://order-service}
          predicates:
            - Path=/api/order/ws/**
          filters:
            # Préserver le path et les headers pour WebSocket
            - PreserveHostHeader

        # Route standard pour Order Service
        - id: order-service
          uri: ${ORDER_SERVICE_URL:lb://order-service}
          predicates:
            - Path=/api/order/**

        # Route pour Inventory Service
        - id: inventory-service
          uri: ${INVENTORY_SERVICE_URL:lb://inventory-service}
          predicates:
            - Path=/api/inventory/**

        # Route pour User Service
        - id: user-service
          uri: ${USER_SERVICE_URL:lb://user-service}
          predicates:
            - Path=/api/user/**

        # Route pour Authentication Service
        - id: authentication-service
          uri: ${AUTH_SERVICE_URL:lb://authentication-service}
          predicates:
            - Path=/api/auth/**

      # Configuration HTTP Client pour WebSocket
      httpclient:
        # Configuration WebSocket
        websocket:
          # Taille max des frames WebSocket (640KB)
          max-frame-payload-length: 655360
          # Proxy automatique des sous-protocoles
          proxy-ping: true
        # Pool de connexions
        pool:
          # Type de pool elastic pour WebSocket
          type: elastic
          # Temps d'inactivité avant fermeture
          max-idle-time: 30s
          # Nombre max de connexions
          max-connections: 500
        # Timeouts de connexion
        connect-timeout: 10000
        # Timeout de réponse (60 secondes pour WebSocket)
        response-timeout: 60s
        # Compression (activée pour les requêtes HTTP standard)
        compression: true

      # Configuration des métriques
      metrics:
        enabled: true

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL}
    fetch-registry: true
    register-with-eureka: true
    # Rafraîchissement plus fréquent pour WebSocket
    registry-fetch-interval-seconds: 5
  instance:
    # Heartbeat plus fréquent
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${random.uuid}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,gateway
  endpoint:
    gateway:
      access: read_only

logging:
  level:
    # Logging configurable via variables d'environnement
    org.springframework.cloud.gateway: ${LOG_LEVEL:INFO}
    org.springframework.web.cors: ${LOG_LEVEL:INFO}
    # Logging spécifique WebSocket (peut être activé si besoin)
    org.springframework.web.reactive.socket: ${WEBSOCKET_LOG_LEVEL:INFO}
    org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping: ${ROUTE_LOG_LEVEL:INFO}
    reactor.netty.http.server: ${NETTY_LOG_LEVEL:INFO}
    com.bacos.mokengeli.biloko.filter: ${FILTER_LOG_LEVEL:INFO}

# Timeouts Reactor Netty pour WebSocket
reactor:
  netty:
    pool:
      # Temps d'inactivité max
      max-idle-time: 60000
      # Durée de vie max d'une connexion
      max-life-time: 300000
    http:
      server:
        # Désactiver la compression pour WebSocket
        compression: false

gateway:
  public-paths: ${PUBLIC_PATHS:public/**,/api/auth/login}