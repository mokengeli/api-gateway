session:
  cache:
    ttl-seconds: ${SESSION_CACHE_TTL:120}

authentication:
  service-id: authentication-service

server:
  port: ${SERVER_PORT}
  forward-headers-strategy: framework
  netty:
    idle-timeout: ${GATEWAY_IDLE_TIMEOUT:PT30S}

security:
  cors:
    allowed-origins: ${ALLOWED_ORIGINS}
    mobile-patterns: ${MOBILE_PATTERNS}
  jwt:
    secret: ${JWT_SECRET}
    cookie:
      access-token: "accessToken"

spring:
  application:
    name: api-gateway
  jpa:
    properties:
      hibernate:
        jdbc:
          time_zone: ${TIME_ZONE:GMT+01:00}
  jackson:
    time-zone: ${TIME_ZONE:GMT+01:00}
  cloud:
    gateway:
      # Configuration globale
      globalcors:
        # Désactivé car géré par CorsGlobalConfiguration
        enabled: false
      forwarded:
        enabled: true

      # Désactiver la découverte automatique des routes
      discovery:
        locator:
          enabled: false

      # Routes
      routes:
        # =============================================================================
        # Order Service
        # =============================================================================
        - id: order-service-http
          uri: lb://order-service
          predicates:
            - Path=/api/order/**

        # =============================================================================
        # Other Services
        # =============================================================================
        - id: inventory-service
          uri: lb://inventory-service
          predicates:
            - Path=/api/inventory/**

        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/user/**

        - id: authentication-service
          uri: lb://authentication-service
          predicates:
            - Path=/api/auth/**

      # Configuration HTTP Client
      httpclient:
        pool:
          type: elastic
          max-idle-time: ${GATEWAY_MAX_IDLE_TIME:30s}
          max-connections: ${GATEWAY_MAX_CONNECTIONS:500}
          acquire-timeout: ${GATEWAY_ACQUIRE_TIMEOUT:30000}
        connect-timeout: ${GATEWAY_CONNECT_TIMEOUT:10000}
        response-timeout: ${GATEWAY_RESPONSE_TIMEOUT:60s}

      # Configuration des métriques
      metrics:
        enabled: ${GATEWAY_METRICS_ENABLED:true}
        tags:
          path:
            enabled: true

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL}
    fetch-registry: true
    register-with-eureka: true
    # Rafraîchissement plus fréquent pour WebSocket
    registry-fetch-interval-seconds: 5
  instance:
    # Heartbeat plus fréquent
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${random.uuid}
    metadata-map:
      gateway-enabled: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,gateway,routes
  endpoint:
    gateway:
      access: unrestricted
    routes:
      enabled: true

logging:
  level:
    # Réduire les logs pour éviter les interférences
    org.springframework.cloud.gateway: ${LOG_LEVEL:INFO}
    org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping: ${ROUTE_LOG_LEVEL:INFO}
    org.springframework.cloud.gateway.filter.factory: ${FILTER_LOG_LEVEL:INFO}
    org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator: ${ROUTE_LOG_LEVEL:INFO}
    org.springframework.web.reactive.socket: ${WEBSOCKET_LOG_LEVEL:INFO}
    reactor.netty: ${NETTY_LOG_LEVEL:INFO}
    reactor.netty.http.client: ${NETTY_CLIENT_LOG_LEVEL:INFO}
    reactor.netty.http.server: ${NETTY_SERVER_LOG_LEVEL:INFO}
    reactor.netty.channel: ${NETTY_CHANNEL_LOG_LEVEL:INFO}
    io.netty.handler.codec.http.websocketx: ${WEBSOCKET_CODEC_LOG_LEVEL:INFO}
    com.bacos.mokengeli.biloko: ${APP_LOG_LEVEL:DEBUG}

# Timeouts Reactor Netty
reactor:
  netty:
    pool:
      max-idle-time: ${NETTY_MAX_IDLE_TIME:60000}
      max-life-time: ${NETTY_MAX_LIFE_TIME:300000}
    http:
      server:
        compression: ${GATEWAY_COMPRESSION:true}

# Paths publics
gateway:
  public-paths: ${PUBLIC_PATHS:/public/**,/api/auth/login}